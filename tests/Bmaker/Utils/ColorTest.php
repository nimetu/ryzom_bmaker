<?php

namespace Bmaker\Utils;

/**
 * Generated by PHPUnit_SkeletonGenerator on 2012-05-27 at 09:13:35.
 */
class ColorTest extends \PHPUnit_Framework_TestCase
{

    public function testHexRgb()
    {
        $strColor = '#ABCDEF';
        $color = new Color($strColor);
        $this->assertEquals($strColor, $color->getColor());
        $this->assertEquals(171, $color->getRed());
        $this->assertEquals(205, $color->getGreen());
        $this->assertEquals(239, $color->getBlue());
        $this->assertEquals(0, $color->getAlpha());
    }

    public function testHexRgba()
    {
        $strColor = '#ABCDEF55';
        $color = new Color($strColor);
        $this->assertEquals($strColor, $color->getColor());
        $this->assertEquals(171, $color->getRed());
        $this->assertEquals(205, $color->getGreen());
        $this->assertEquals(239, $color->getBlue());
        $this->assertEquals(85, $color->getAlpha());
    }

    public function testRgb()
    {
        $strColor = 'rgb(100,200,255)';
        $color = new Color($strColor);
        $this->assertEquals($strColor, $color->getColor());
        $this->assertEquals(100, $color->getRed());
        $this->assertEquals(200, $color->getGreen());
        $this->assertEquals(255, $color->getBlue());
        $this->assertEquals(0, $color->getAlpha());
    }

    public function testRgba()
    {
        $strColor = 'rgb(100,200,255,127)';
        $color = new Color($strColor);
        $this->assertEquals($strColor, $color->getColor());
        $this->assertEquals(100, $color->getRed());
        $this->assertEquals(200, $color->getGreen());
        $this->assertEquals(255, $color->getBlue());
        $this->assertEquals(64, $color->getAlpha());
    }

    public function testInvalidColor()
    {
        $strColor = '-invalid-';
        $color = new Color($strColor);
        $this->assertEquals($strColor, $color->getColor());
        $this->assertEquals(255, $color->getRed());
        $this->assertEquals(255, $color->getGreen());
        $this->assertEquals(255, $color->getBlue());
        $this->assertEquals(0, $color->getAlpha());
    }

}
